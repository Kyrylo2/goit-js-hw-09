{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACdC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAP,EAAUQ,MAAAP,IAEpBG,EAAO,CAAEG,SAAAP,EAAUQ,MAAAP,OAKpBQ,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBX,EAAAc,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBX,EAAAc,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAK5CQ,SAASC,cAAc,SAG/BC,iBAAiB,UAE7B,SAA6BC,GAC3BA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SAASH,EAAEI,QACAC,EAAAC,OAAOC,YAAYL,GAA3Cb,EAAwBgB,EAAxBhB,MAAOmB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEjBC,EAAgB,EAChBC,GAAgBtB,EAEpBuB,YAAW,WACThC,EAAc8B,EAAeC,GAG7B,IAAME,EAAWC,aAAY,WAE3BlC,IADA8B,EAC6BC,GAC7BA,IAAiBH,EAEbE,KAAmBD,GAAQM,cAAcF,MAC3CL,MACFnB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// DOM elements\nconst promiceForm = document.querySelector('.form');\n\n// event handler on form button click\npromiceForm.addEventListener('submit', initPromiseCreation);\n\nfunction initPromiseCreation(e) {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const { delay, step, amount } = Object.fromEntries(formData);\n\n  let currentAmount = 1;\n  let currentDelay = +delay;\n\n  setTimeout(() => {\n    createPromise(currentAmount, currentDelay); // first promise\n\n    // Other promises\n    const interval = setInterval(() => {\n      currentAmount++;\n      createPromise(currentAmount, currentDelay);\n      currentDelay += +step;\n\n      if (currentAmount === +amount) clearInterval(interval);\n    }, +step);\n  }, +delay);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","Math","random","position","delay","then","param","Notify","success","concat","catch","failure","document","querySelector","addEventListener","e","preventDefault","formData","FormData","target","ref","Object","fromEntries","step","amount","currentAmount","currentDelay","setTimeout","interval","setInterval","clearInterval"],"version":3,"file":"03-promises.2be9379b.js.map"}